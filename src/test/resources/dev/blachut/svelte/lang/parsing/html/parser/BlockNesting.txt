SvelteHtmlFile: BlockNesting.svelte
  PsiElement(HTML_DOCUMENT)
    PsiElement(XML_PROLOG)
      <empty list>
    SvelteHtmlTag: p
      XmlToken:XML_START_TAG_START('<')
      XmlToken:XML_NAME('p')
      XmlToken:XML_TAG_END('>')
      XmlText
        XmlToken:XML_DATA_CHARACTERS('Text')
      XmlToken:XML_END_TAG_START('</')
      XmlToken:XML_NAME('p')
      XmlToken:XML_TAG_END('>')
    PsiWhiteSpace('\n\n')
    SvelteIfBlock
      SvelteIfPrimaryBranch
        SvelteInitialTag(IF_START)
          PsiElement(JS:LBRACE)('{')
          PsiElement(JS:SHARP)('#')
          PsiElement(JS:IF_KEYWORD)('if')
          PsiWhiteSpace(' ')
          JSReferenceExpression
            PsiElement(JS:IDENTIFIER)('visible')
          PsiElement(JS:RBRACE)('}')
        SvelteFragment
          XmlText
            PsiWhiteSpace('\n    ')
          SvelteAwaitBlock
            SvelteAwaitPrimaryBranch
              SvelteInitialTag(AWAIT_START)
                PsiElement(JS:LBRACE)('{')
                PsiElement(JS:SHARP)('#')
                PsiElement(JS:AWAIT_KEYWORD)('await')
                PsiWhiteSpace(' ')
                JSReferenceExpression
                  PsiElement(JS:IDENTIFIER)('promise')
                PsiWhiteSpace(' ')
                PsiElement(JS:THEN_KEYWORD)('then')
                PsiWhiteSpace(' ')
                SvelteJSParameter
                  PsiElement(JS:IDENTIFIER)('x')
                PsiElement(JS:RBRACE)('}')
              SvelteFragment
                XmlText
                  PsiWhiteSpace('\n        ')
                SvelteHtmlTag: p
                  XmlToken:XML_START_TAG_START('<')
                  XmlToken:XML_NAME('p')
                  XmlToken:XML_TAG_END('>')
                  SvelteJS: CONTENT_EXPRESSION
                    PsiElement(JS:LBRACE)('{')
                    PsiElement(JS:AT)('@')
                    PsiElement(JS:HTML_KEYWORD)('html')
                    PsiWhiteSpace(' ')
                    JSReferenceExpression
                      PsiElement(JS:IDENTIFIER)('x')
                    PsiElement(JS:RBRACE)('}')
                  XmlToken:XML_END_TAG_START('</')
                  XmlToken:XML_NAME('p')
                  XmlToken:XML_TAG_END('>')
                XmlText
                  PsiWhiteSpace('\n    ')
            SvelteEndTag(AWAIT_END)
              PsiElement(JS:LBRACE)('{')
              PsiElement(JS:DIV)('/')
              PsiElement(JS:AWAIT_KEYWORD)('await')
              PsiElement(JS:RBRACE)('}')
          XmlText
            PsiWhiteSpace('\n')
      SvelteIfElseBranch
        SvelteInitialTag(ELSE_CLAUSE)
          PsiElement(JS:LBRACE)('{')
          PsiElement(JS:COLON)(':')
          PsiElement(JS:ELSE_KEYWORD)('else')
          PsiElement(JS:RBRACE)('}')
        SvelteFragment
          XmlText
            PsiWhiteSpace('\n    ')
          SvelteJS: CONTENT_EXPRESSION
            PsiElement(JS:LBRACE)('{')
            PsiElement(JS:AT)('@')
            PsiElement(JS:DEBUG_KEYWORD)('debug')
            PsiWhiteSpace(' ')
            JSReferenceExpression
              PsiElement(JS:IDENTIFIER)('name')
            PsiElement(JS:RBRACE)('}')
          XmlText
            PsiWhiteSpace('\n    ')
          SvelteHtmlTag: p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('Kappa')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
      SvelteEndTag(IF_END)
        PsiElement(JS:LBRACE)('{')
        PsiElement(JS:DIV)('/')
        PsiElement(JS:IF_KEYWORD)('if')
        PsiElement(JS:RBRACE)('}')
    PsiWhiteSpace('\n\n')
    SvelteHtmlTag: ul
      XmlToken:XML_START_TAG_START('<')
      XmlToken:XML_NAME('ul')
      XmlToken:XML_TAG_END('>')
      XmlText
        PsiWhiteSpace('\n    ')
      SvelteEachBlock
        SvelteEachPrimaryBranch
          SvelteInitialTag(EACH_START)
            PsiElement(JS:LBRACE)('{')
            PsiElement(JS:SHARP)('#')
            PsiElement(JS:EACH_KEYWORD)('each')
            PsiWhiteSpace(' ')
            JSReferenceExpression
              PsiElement(JS:IDENTIFIER)('assets')
            PsiWhiteSpace(' ')
            PsiElement(JS:AS_KEYWORD)('as')
            PsiWhiteSpace(' ')
            SvelteJSParameter
              PsiElement(JS:IDENTIFIER)('a')
            PsiElement(JS:RBRACE)('}')
          SvelteFragment
            SvelteJS: CONTENT_EXPRESSION
              PsiElement(JS:LBRACE)('{')
              JSReferenceExpression
                PsiElement(JS:IDENTIFIER)('a')
              PsiElement(JS:RBRACE)('}')
        SvelteEndTag(EACH_END)
          PsiElement(JS:LBRACE)('{')
          PsiElement(JS:DIV)('/')
          PsiElement(JS:EACH_KEYWORD)('each')
          PsiElement(JS:RBRACE)('}')
      XmlText
        PsiWhiteSpace('\n')
      XmlToken:XML_END_TAG_START('</')
      XmlToken:XML_NAME('ul')
      XmlToken:XML_TAG_END('>')
